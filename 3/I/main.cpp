#include <iostream>
#include <vector>

static const uint64_t M = 65536;
static const uint64_t P = 786433;
static const uint64_t G = 346395;

static uint64_t dp[static_cast<size_t>(M)][16];

uint64_t pow(uint64_t a, uint64_t b, uint64_t mod) {
    if (b == 0) {
        return 1;
    }
    uint64_t a2 = pow(a, b / 2, mod);
    a2 = a2 * a2 % mod;
    if (b % 2 == 1) {
        a2 = a2 * a % mod;
    }
    return a2;
}

std::vector<uint64_t> fft(std::vector<uint64_t> const &a, uint64_t w) {
    if (a.size() == 1) {
        return {a[0]};
    }
    std::vector<uint64_t> a0, a1;
    a0.reserve(a.size() / 2);
    a1.reserve(a.size() / 2);
    for (size_t i = 0; i < a.size(); i += 2) {
        a0.push_back(a[i]);
        a1.push_back(a[i + 1]);
    }
    auto u0 = fft(a0, w * w % P);
    auto u1 = fft(a1, w * w % P);
    std::vector<uint64_t> ans(a.size());
    size_t m = a.size() / 2;
    uint64_t g = 1;
    for (size_t i = 0; i < a.size(); i++) {
        ans[i] = (u0[i % m] + g * u1[i % m]) % P;
        g = g * w % P;
    }
    return ans;
}

std::vector<uint64_t> inverse_fft(std::vector<uint64_t> const &a, uint64_t w) {
    auto b = fft(a, w);
    std::vector<uint64_t> ans(b.size());
    auto n = pow(M, P - 2, P);
    ans[0] = b[0] * n % P;
    for (size_t i = 1; i < M; i++) {
        ans[i] = b[static_cast<size_t>(M - i)] * n % P;
    }
    return ans;
}

std::vector<uint64_t> multiply(std::vector<uint64_t> const &a, std::vector<uint64_t> const &b) {
    auto ffta = fft(a, G);
    auto fftb = fft(b, G);
    std::vector<uint64_t> c(M);
    for (size_t i = 0; i < M; i++) {
        c[i] = ffta[i] * fftb[i] % P;
    }
    return inverse_fft(c, G);
}

int main() {
    for (size_t i = 0; i < M; i++) {
        dp[i][0] = 0;
        dp[i][1] = 0;
        dp[i][2] = 0;
        dp[i][3] = 0;
    }
    dp[1][0] = 1;
    dp[2][1] = 2;
    dp[3][1] = 1;
    dp[4][2] = 4;
    dp[5][2] = 6;
    dp[6][2] = 4;
    dp[7][2] = 1;
    dp[7][3] = 16;
    dp[8][3] = 32;
    dp[9][3] = 44;
    dp[10][3] = 60;
    dp[11][3] = 70;
    dp[12][3] = 56;
    dp[13][3] = 28;
    dp[14][3] = 8;
    dp[15][3] = 1;
    dp[12][4] = 128;
    dp[13][4] = 448;
    dp[14][4] = 864;
    dp[15][4] = 1552;
    dp[16][4] = 2720;
    dp[17][4] = 4288;
    dp[18][4] = 6312;
    dp[19][4] = 9004;
    dp[20][4] = 11992;
    dp[21][4] = 14372;
    dp[22][4] = 15400;
    dp[23][4] = 14630;
    dp[24][4] = 11968;
    dp[25][4] = 8104;
    dp[26][4] = 4376;
    dp[27][4] = 1820;
    dp[28][4] = 560;
    dp[29][4] = 120;
    dp[30][4] = 16;
    dp[31][4] = 1;
    dp[20][5] = 4096;
    dp[21][5] = 22528;
    dp[22][5] = 67584;
    dp[23][5] = 159744;
    dp[24][5] = 334080;
    dp[25][5] = 644992;
    dp[26][5] = 408575;
    dp[27][5] = 586046;
    dp[28][5] = 666172;
    dp[29][5] = 325720;
    dp[30][5] = 297842;
    dp[31][5] = 104184;
    dp[32][5] = 656217;
    dp[33][5] = 551008;
    dp[34][5] = 747354;
    dp[35][5] = 447009;
    dp[36][5] = 680033;
    dp[37][5] = 305980;
    dp[38][5] = 312137;
    dp[39][5] = 347645;
    dp[40][5] = 741747;
    dp[41][5] = 539251;
    dp[42][5] = 320950;
    dp[43][5] = 508090;
    dp[44][5] = 773101;
    dp[45][5] = 253711;
    dp[46][5] = 762847;
    dp[47][5] = 488800;
    dp[48][5] = 35551;
    dp[49][5] = 506651;
    dp[50][5] = 201911;
    dp[51][5] = 190321;
    dp[52][5] = 575173;
    dp[53][5] = 24468;
    dp[54][5] = 64812;
    dp[55][5] = 347087;
    dp[56][5] = 226172;
    dp[57][5] = 120207;
    dp[58][5] = 201392;
    dp[59][5] = 35960;
    dp[60][5] = 4960;
    dp[61][5] = 496;
    dp[62][5] = 32;
    dp[63][5] = 1;
    dp[33][6] = 262143;
    dp[34][6] = 786421;
    dp[35][6] = 524232;
    dp[36][6] = 524094;
    dp[37][6] = 392660;
    dp[38][6] = 653952;
    dp[39][6] = 258877;
    dp[40][6] = 386119;
    dp[41][6] = 743089;
    dp[42][6] = 220611;
    dp[43][6] = 465409;
    dp[44][6] = 522257;
    dp[45][6] = 661581;
    dp[46][6] = 512292;
    dp[47][6] = 694974;
    dp[48][6] = 273152;
    dp[49][6] = 74251;
    dp[50][6] = 306115;
    dp[51][6] = 765594;
    dp[52][6] = 651808;
    dp[53][6] = 272967;
    dp[54][6] = 216454;
    dp[55][6] = 229633;
    dp[56][6] = 476329;
    dp[57][6] = 456516;
    dp[58][6] = 14735;
    dp[59][6] = 259944;
    dp[60][6] = 336284;
    dp[61][6] = 50719;
    dp[62][6] = 167127;
    dp[63][6] = 172281;
    dp[64][6] = 645934;
    dp[65][6] = 17433;
    dp[66][6] = 420260;
    dp[67][6] = 483174;
    dp[68][6] = 311638;
    dp[69][6] = 36999;
    dp[70][6] = 52485;
    dp[71][6] = 29845;
    dp[72][6] = 585484;
    dp[73][6] = 337636;
    dp[74][6] = 469964;
    dp[75][6] = 467815;
    dp[76][6] = 163644;
    dp[77][6] = 177403;
    dp[78][6] = 352481;
    dp[79][6] = 275979;
    dp[80][6] = 377428;
    dp[81][6] = 565882;
    dp[82][6] = 751931;
    dp[83][6] = 670644;
    dp[84][6] = 16223;
    dp[85][6] = 780928;
    dp[86][6] = 354942;
    dp[87][6] = 166176;
    dp[88][6] = 376483;
    dp[89][6] = 695442;
    dp[90][6] = 97141;
    dp[91][6] = 406374;
    dp[92][6] = 273151;
    dp[93][6] = 636900;
    dp[94][6] = 57258;
    dp[95][6] = 745465;
    dp[96][6] = 31248;
    dp[97][6] = 243438;
    dp[98][6] = 118941;
    dp[99][6] = 576561;
    dp[100][6] = 261911;
    dp[101][6] = 225643;
    dp[102][6] = 20202;
    dp[103][6] = 645034;
    dp[104][6] = 351153;
    dp[105][6] = 513071;
    dp[106][6] = 147515;
    dp[107][6] = 180006;
    dp[108][6] = 585051;
    dp[109][6] = 179684;
    dp[110][6] = 773169;
    dp[111][6] = 256551;
    dp[112][6] = 499726;
    dp[113][6] = 399833;
    dp[114][6] = 407226;
    dp[115][6] = 308563;
    dp[116][6] = 681074;
    dp[117][6] = 108306;
    dp[118][6] = 362945;
    dp[119][6] = 429051;
    dp[120][6] = 777195;
    dp[121][6] = 265153;
    dp[122][6] = 546647;
    dp[123][6] = 635376;
    dp[124][6] = 41664;
    dp[125][6] = 2016;
    dp[126][6] = 64;
    dp[127][6] = 1;
    for (size_t i = 7; i <= 15; i++) {
        std::vector<uint64_t> a(M, 0), b(M, 0);
        for (size_t j = 0; j < M; j++) {
            a[j] = dp[j][i - 1];
            if (i > 1) {
                b[j] = dp[j][i - 2];
            }
        }
        std::vector<uint64_t> u = multiply(a, a),
                                v = multiply(a, b);
        for (size_t j = 1; j < M; j++) {
            dp[j][i] = (u[j - 1] + 2 * v[j - 1]) % P;
        }
        dp[0][i] = 0;
    }
    size_t n, h;
    std::cin >> n >> h;
    std::cout << dp[n][h] << std::endl;
    return 0;
}
